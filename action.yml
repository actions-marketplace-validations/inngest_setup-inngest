name: Set up Inngest CLI
author: Inngest
description: |-
  Downloads, installs, and configures the Inngest CLI.
  Added as `inngest` to the $PATH.

inputs:
  version:
    description: |-
      Version of the Inngest CLI to install. If unspecified or set to "latest",
      the latest available Inngset CLI version for the target platform will be
      installed.

      Example: "latest" or "1.5.2"
    required: false
    default: latest
  token:
    description: |-
      An auth token which, if given, will be used to authenticate with the
      Inngest CLI using `inngest login`.
    required: false
    default: ""

outputs:
  version:
    description: |-
      The version of the Inngest CLI that was installed. Useful if the version
      input was set to "latest" and you need to see which version was actually
      installed.
    value: ${{ steps.echo-version-bash.outputs.version || steps.echo-version-cmd.outputs.version }}

branding:
  icon: terminal
  color: blue

runs:
  using: composite
  steps:
      # Using npm as this also supports Windows atm
      # Would be good to get a script for Windows sorted so we don't need to
      # set up node here.
      # We could also only do this step for Windows and on unix default to using
      # the script.
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - run: npm i -g inngest-cli@${{ inputs.version }}
      shell: ${{ runner.os == 'Windows' && 'cmd' || 'bash' }}
    # - if: inputs.token != ''
    #   run: inngest login --token ${{ inputs.token }}
    #   shell: ${{ runner.os == 'Windows' && 'cmd' || 'bash' }}
    - id: echo-version-cmd
      if: runner.os == 'Windows'
      run: FOR /F %%A IN ('inngest version') DO echo ::set-output name=version::%%~A
      shell: cmd
    - id: echo-version-bash
      if: runner.os != 'Windows'
      run: echo "::set-output name=version::$(inngest version)"
      shell: bash
